eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"app/adapters/application\", \n  [\"ember\",\"ember-data\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var DS = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTAdapter.extend({\n      namespace: Ember.ENV.NAMESPACE\n    });\n  });//# sourceURL=app/adapters/application.js");

;eval("define(\"app/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'app\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'app\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=app/app.js");

;eval("define(\"app/clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var TICK_INTERVAL = 500;\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      second: null\n\n    , minute: null\n\n    , hour:   null\n\n    , init: function() {\n        this.tick();\n      }\n\n    , tick: function() {\n        var now = new Date();\n\n        this.setProperties({\n          second: now.getSeconds()\n        , minute: now.getMinutes()\n        , hour:   now.getHours()\n        });\n\n        var self = this;\n        setTimeout(function(){ self.tick(); }, TICK_INTERVAL);\n      }\n\n    });\n  });//# sourceURL=app/clock.js");

;eval("define(\"app/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_RESOLVER\":true,\"LOG_ACTIVE_GENERATION\":true,\"LOG_MODULE_RESOLVER\":true,\"LOG_VIEW_LOOKUPS\":true},\"LOG_MODULE_RESOLVER\":true};\n  });//# sourceURL=app/config/environment.js");

;eval("define(\"app/config/environments/development\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_RESOLVER\":true,\"LOG_ACTIVE_GENERATION\":true,\"LOG_MODULE_RESOLVER\":true,\"LOG_VIEW_LOOKUPS\":true},\"LOG_MODULE_RESOLVER\":true};\n  });//# sourceURL=app/config/environments/development.js");

;eval("define(\"app/config/environments/test\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"test\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{}};\n  });//# sourceURL=app/config/environments/test.js");

;eval("define(\"app/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n      pollInterval: Ember.ENV.POLL_INTERVAL\n\n    });\n  });//# sourceURL=app/controllers/application.js");

;eval("define(\"app/controllers/item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var PRIORITY_MAP = {\n      \'20\': \'highest\'\n    , \'10\': \'high\'\n    , \'0\': \'default\'\n    , \'-10\': \'low\'\n    , \'-20\': \'lowest\'\n    };\n\n    var JobController = Ember.ObjectController.extend({\n\n      nextRunAtFromNow: function () {\n        var next = moment.utc(this.get(\'nextRunAt\'));\n        var now = moment.utc();\n        var diff = next.diff(now);\n        var ret = Math.floor(diff / 1000);\n        if (ret < 0) {\n          ret = 0;\n        }\n        return ret;\n      }.property(\'clock.second\')\n\n    , priorityHuman: function () {\n        return PRIORITY_MAP[this.get(\'priority\')];\n      }.property(\'priority\')\n\n    , isRunning: Ember.computed.bool(\'lockedAt\')\n\n    , actions: {\n        toggleDataExpand: function () {\n          this.toggleProperty(\'dataExpanded\');\n        }\n\n      , toggleDetailsExpand: function () {\n          this.toggleProperty(\'detailsExpanded\');\n        }\n      }\n\n\n    });\n\n    __exports__[\"default\"] = JobController;\n  });//# sourceURL=app/controllers/item.js");

;eval("define(\"app/controllers/jobs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n      needs: [\'jobs/feed\']\n\n    , filter: \'future\'\n\n    , job: \'all\'\n\n    , meta: function () {\n        return this.store.metadataFor(\'job\');\n      }.property(\'controllers.jobs/feed.content\', \'filter\', \'job\')\n\n    , sortedDefinitions: function () {\n        return this.get(\'definitions\').sortBy(\'sortValue\', \'id\');\n      }.property(\'definitions\')\n\n    });\n  });//# sourceURL=app/controllers/jobs.js");

;eval("define(\"app/controllers/jobs/feed-item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var PRIORITY_MAP = {\n      \'20\': \'highest\'\n    , \'10\': \'high\'\n    , \'0\': \'default\'\n    , \'-10\': \'low\'\n    , \'-20\': \'lowest\'\n    };\n\n    var JobController = Ember.ObjectController.extend({\n\n      nextRunAtFromNow: function () {\n        var next = moment.utc(this.get(\'nextRunAt\'));\n        var now = moment.utc();\n        var diff = next.diff(now);\n        var ret = Math.floor(diff / 1000);\n        if (ret < 0) {\n          ret = 0;\n        }\n        return ret;\n      }.property(\'clock.second\')\n\n    , priorityHuman: function () {\n        return PRIORITY_MAP[this.get(\'priority\')];\n      }.property(\'priority\')\n\n    , isRunning: Ember.computed.bool(\'lockedAt\')\n\n    , actions: {\n        toggleDataExpand: function () {\n          this.toggleProperty(\'dataExpanded\');\n        }\n\n      , toggleDetailsExpand: function () {\n          this.toggleProperty(\'detailsExpanded\');\n        }\n      }\n\n\n    });\n\n    __exports__[\"default\"] = JobController;\n  });//# sourceURL=app/controllers/jobs/feed-item.js");

;eval("define(\"app/controllers/jobs/feed\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n\n      needs: [\'jobs\']\n\n    , queryParams: [\'filter\', \'job\']\n\n    , filter: Ember.computed.alias(\'controllers.jobs.filter\')\n\n    , job: Ember.computed.alias(\'controllers.jobs.job\')\n\n    , meta: function () {\n        return this.get(\'content.meta\');\n      }.property(\'content\')\n\n    , itemController: \'jobs/feed-item\'\n\n    , sortProperties: [\n        \'type\'\n      , \'nextRunAt\'\n      , \'isFinished\'\n      ]\n\n    , orderBy: function (a, b) {\n        var ret = 0;\n\n        if (a.get(\'isFinished\') && b.get(\'isFinished\')) {\n          ret = (a.get(\'lastRunAt\') > b.get(\'lastRunAt\')) ? -1 : 1;\n        } else if (a.get(\'isFinished\') || b.get(\'isFinished\')) {\n          ret = (a.get(\'isFinished\')) ? -1 : 1;\n        } else {\n          ret = (a.get(\'nextRunAt\') < b.get(\'nextRunAt\')) ? -1 : 1;\n        }\n\n        return ret;\n      }\n\n    });\n  });//# sourceURL=app/controllers/jobs/feed.js");

;eval("define(\"app/helpers/highlight-object\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n     __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(object, replacer, spacer){\n      object = object || {};\n      var string = JSON.stringify(object, replacer, spacer);\n      string = string.replace(/^\\s+|\\s+$/g,\'\');\n      string = hljs.highlightAuto(string).value;\n      return new Ember.Handlebars.SafeString(string);\n     });\n  });//# sourceURL=app/helpers/highlight-object.js");

;eval("define(\"app/helpers/time-tag\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(date, object) {\n      if (date) {\n        var options = object.hash;\n        options.format = options.format || \'H:mm:ss, dd MMM Do\';\n        var formatted = moment.utc(date).format(options.format);\n        var ret = \'<time title=\"\'+date+\'\" datetime=\"\'+date+\'\" class=\"time\">\'+formatted+\'</time>\';\n        if (options.prefix) {\n          ret = options.prefix + \' \' + ret;\n        }\n        return new Ember.Handlebars.SafeString(\'<span class=\"time-container\">\'+ret+\'</span>\');\n      }\n    });\n  });//# sourceURL=app/helpers/time-tag.js");

;eval("define(\"app/initializers/clock\", \n  [\"app/clock\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Clock = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n\n      name: \'clock\'\n\n    , initialize: function(container) {\n        container.register(\'clock:main\', Clock, { singleton: true });\n        container.typeInjection(\'controller\', \'clock\', \'clock:main\');\n      }\n\n    };\n  });//# sourceURL=app/initializers/clock.js");

;eval("define(\"app/models/definition\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var attr = DS.attr;\n\n    __exports__[\"default\"] = DS.Model.extend({\n\n      name: attr(\'string\')\n\n    , count: attr(\'number\')\n\n    , sortValue: attr(\'number\')\n\n    });\n  });//# sourceURL=app/models/definition.js");

;eval("define(\"app/models/job\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var attr = DS.attr;\n\n    __exports__[\"default\"] = DS.Model.extend({\n      name: attr(\'string\')\n    , jobData: attr()\n    , nextRunAt: attr(\'date\')\n    , lastRunAt: attr(\'date\')\n    , lastFinishedAt: attr(\'date\')\n    , lastModifiedBy: attr(\'date\')\n    , lockedAt: attr(\'date\')\n    , failedAt: attr(\'date\')\n    , failReason: attr(\'string\')\n    , type: attr(\'string\')\n    , repeatInterval: attr(\'string\')\n    , priority: attr(\'number\')\n\n    , isFinished: function () {\n        return this.get(\'lastRunAt\') && !this.get(\'isRepeating\');\n      }.property(\'lastRunAt\')\n\n    , isRepeating: function () {\n        return this.get(\'type\') === \'single\';\n      }.property(\'type\')\n\n    });\n  });//# sourceURL=app/models/job.js");

;eval("define(\"app/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n\n    // TODO - figure out why this doesn\'t work when mounted on another app\n    // location: \'auto\'\n\n      rootUrl: \'/\' + Ember.ENV.NAMESPACE + \'/\'\n\n    });\n\n    Router.map(function() {\n      this.route(\'application\');\n      this.resource(\'jobs\', {path: \'/\'}, function () {\n        this.route(\'feed\', {path: \'/\'});\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=app/router.js");

;eval("define(\"app/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    });\n  });//# sourceURL=app/routes/application.js");

;eval("define(\"app/routes/jobs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function () {\n        return this.store.find(\'definition\');\n      }\n\n    , setupController: function (controller, model) {\n        controller.set(\'definitions\', model);\n      }\n\n    });\n  });//# sourceURL=app/routes/jobs.js");

;eval("define(\"app/routes/jobs/feed\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var POLL_INTERVAL = Ember.ENV.POLL_INTERVAL;\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      activate: function () {\n        Ember.run.cancel(this.timer);\n        if (POLL_INTERVAL) {\n          this.poll();\n        }\n      }\n\n    , queryParams: {\n        filter: {\n          refreshModel: true\n        }\n      , job: {\n          refreshModel: true\n        }\n      }\n\n    , model: function (params) {\n        var definition = this.store.getById(\'definition\', params.job);\n\n        var query = {\n          filter: params.filter\n        , name: definition.get(\'name\')\n        };\n\n        return this.store.find(\'job\', query);\n      }\n\n    , poll: function () {\n        this.timer = Ember.run.later(this, function () {\n          console.log(\'polling\');\n          this.refresh().then(this.poll.bind(this));\n        }, POLL_INTERVAL);\n      }\n\n    });\n  });//# sourceURL=app/routes/jobs/feed.js");

;eval("define(\"app/serializers/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTSerializer.extend({\n      primaryKey: \'_id\'\n    });\n  });//# sourceURL=app/serializers/application.js");

;eval("define(\"app/templates/-header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n      <span class=\'logo\'>\\n        &#9997;\\n      </span>\\n      Agenda UI\\n    \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      Polling for changes every \");\n      stack1 = helpers._triageMustache.call(depth0, \"pollInterval\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"ms.\\n    \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n      Not polling for changes.\\n    \");\n      }\n\n      data.buffer.push(\"<header class=\'navbar navbar-default navbar-fixed-top\'>\\n<div class=\'container\'>\\n  <div class=\'navbar-header\'>\\n    \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'filter\': (\"future\"),\n        \'job\': (\"all\")\n      },hashTypes:{\'filter\': \"STRING\",\'job\': \"STRING\"},hashContexts:{\'filter\': depth0,\'job\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"navbar-brand\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"jobs.feed\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"jobs.feed\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n\\n  <div class=\'navbar-text navbar-right\'>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"pollInterval\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n</header>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=app/templates/-header.js");

;eval("define(\"app/templates/-loader\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"  <div class=\'loader\'>\\n    <div class=\'loader-circle\'></div>\\n    <div class=\'loader-circle\'></div>\\n    <div class=\'loader-circle\'></div>\\n  </div>\\n\");\n      \n    });\n  });//# sourceURL=app/templates/-loader.js");

;eval("define(\"app/templates/-sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <div class=\'text-overflow\'>Future</div>\\n        <span class=\'badge pull-right\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"meta.future\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n      \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <div class=\'text-overflow\'>Completed</div>\\n        <span class=\'badge pull-right\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"meta.completed\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n      \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <div class=\'text-overflow\'>Failed</div>\\n        <span class=\'badge pull-right\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"meta.failed\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n      \");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n      <li>\\n        \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'job\': (\"definition.id\")\n      },hashTypes:{\'job\': \"ID\"},hashContexts:{\'job\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"jobs.feed\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"jobs.feed\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </li>\\n    \");\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n          <div class=\'text-overflow\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"definition.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n          <span class=\'badge pull-right\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"definition.count\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<aside class=\'sidebar\'>\\n\\n  <ul class=\\\"nav nav-pills nav-stacked nav-filters\\\">\\n    <li class=\'text-info\'>\\n      \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'filter\': (\"future\")\n      },hashTypes:{\'filter\': \"STRING\"},hashContexts:{\'filter\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"jobs.feed\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"jobs.feed\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </li>\\n    <li class=\'text-success\'>\\n      \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'filter\': (\"completed\")\n      },hashTypes:{\'filter\': \"STRING\"},hashContexts:{\'filter\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"jobs.feed\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"jobs.feed\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </li>\\n    <li class=\'text-danger\'>\\n      \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'filter\': (\"failed\")\n      },hashTypes:{\'filter\': \"STRING\"},hashContexts:{\'filter\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"jobs.feed\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"jobs.feed\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </li>\\n\\n  <hr />\\n\\n  <ul class=\\\"nav nav-pills nav-stacked\\\">\\n    \");\n      stack1 = helpers.each.call(depth0, \"definition\", \"in\", \"sortedDefinitions\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </ul>\\n\\n</aside>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=app/templates/-sidebar.js");

;eval("define(\"app/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"header\", options) : helperMissing.call(depth0, \"partial\", \"header\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=app/templates/application.js");

;eval("define(\"app/templates/job\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <span class=\'meta-item\'>\\n          &#10561; Repeats: \");\n      stack1 = helpers._triageMustache.call(depth0, \"repeatInterval\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </span>\\n\\n        &middot;\\n      \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <small class=\'next-run-counter\'>\\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"nextRunAtFromNow\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </small>\\n      \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n      <div class=\'fail-message bg-warning\'>\\n        <span class=\'fail-icon\'>&#9888;</span> \");\n      stack1 = helpers._triageMustache.call(depth0, \"failReason\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" at \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-tag\'] || (depth0 && depth0[\'time-tag\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"failedAt\", options) : helperMissing.call(depth0, \"time-tag\", \"failedAt\", options))));\n      data.buffer.push(\"\\n      </div>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      <small>\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"repeatInterval\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n      <span class=\'meta-item\'>\\n        <span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":priority priorityHuman\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">&#9187;</span> Priority: \");\n      stack1 = helpers._triageMustache.call(depth0, \"priorityHuman\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </span>\\n      </small>\\n    </h3>\\n\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"nextRunAtFromNow\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"failedAt\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  <div class=\\\"panel-body\\\">\\n    <div class=\'meta\'>\\n\\n    </div>\\n\\n<div class=\'times\'>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-tag\'] || (depth0 && depth0[\'time-tag\']),options={hash:{\n        \'prefix\': (\"Last:\")\n      },hashTypes:{\'prefix\': \"STRING\"},hashContexts:{\'prefix\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"lastRunAt\", options) : helperMissing.call(depth0, \"time-tag\", \"lastRunAt\", options))));\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-tag\'] || (depth0 && depth0[\'time-tag\']),options={hash:{\n        \'prefix\': (\"Next:\")\n      },hashTypes:{\'prefix\': \"STRING\"},hashContexts:{\'prefix\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"nextRunAt\", options) : helperMissing.call(depth0, \"time-tag\", \"nextRunAt\", options))));\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-tag\'] || (depth0 && depth0[\'time-tag\']),options={hash:{\n        \'prefix\': (\"Finished:\")\n      },hashTypes:{\'prefix\': \"STRING\"},hashContexts:{\'prefix\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"lastFinishedAt\", options) : helperMissing.call(depth0, \"time-tag\", \"lastFinishedAt\", options))));\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-tag\'] || (depth0 && depth0[\'time-tag\']),options={hash:{\n        \'prefix\': (\"Locked:\")\n      },hashTypes:{\'prefix\': \"STRING\"},hashContexts:{\'prefix\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"lockedAt\", options) : helperMissing.call(depth0, \"time-tag\", \"lockedAt\", options))));\n      data.buffer.push(\"\\n</div>\\n\\n  </div>\\n\\n  </div>\\n  <div \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleDataExpand\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":job-data-preview :panel-footer dataExpanded:is-expanded\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'highlight-object\'] || (depth0 && depth0[\'highlight-object\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"INTEGER\"],data:data},helper ? helper.call(depth0, \"jobData\", \"null\", 2, options) : helperMissing.call(depth0, \"highlight-object\", \"jobData\", \"null\", 2, options))));\n      data.buffer.push(\"</div>\\n\\n\\n\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=app/templates/job.js");

;eval("define(\"app/templates/jobs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\'container\'>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"sidebar\", options) : helperMissing.call(depth0, \"partial\", \"sidebar\", options))));\n      data.buffer.push(\"\\n\\n    <div class=\'feed\'>\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n\\n  </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=app/templates/jobs.js");

;eval("define(\"app/templates/jobs/loading\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\'centered loading-container\'>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"loader\", options) : helperMissing.call(depth0, \"partial\", \"loader\", options))));\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=app/templates/jobs/loading.js");

;eval("define(\"app/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/adapters/application.jshint.js");

;eval("define(\"app/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/app.jshint.js");

;eval("define(\"app/tests/app/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - app/tests/helpers\');\n    test(\'app/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'app/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/app/tests/helpers/resolver.jshint.js");

;eval("define(\"app/tests/app/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - app/tests/helpers\');\n    test(\'app/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'app/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/app/tests/helpers/start-app.jshint.js");

;eval("define(\"app/tests/app/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - app/tests\');\n    test(\'app/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'app/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/app/tests/test-helper.jshint.js");

;eval("define(\"app/tests/app/tests/unit/components/nav-filter-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - app/tests/unit/components\');\n    test(\'app/tests/unit/components/nav-filter-test.js should pass jshint\', function() { \n      ok(true, \'app/tests/unit/components/nav-filter-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/app/tests/unit/components/nav-filter-test.jshint.js");

;eval("define(\"app/tests/app/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - app/tests/unit/routes\');\n    test(\'app/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'app/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/app/tests/unit/routes/application-test.jshint.js");

;eval("define(\"app/tests/clock.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'clock.js should pass jshint\', function() { \n      ok(true, \'clock.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/clock.jshint.js");

;eval("define(\"app/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/controllers/application.jshint.js");

;eval("define(\"app/tests/controllers/item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/item.js should pass jshint\', function() { \n      ok(true, \'controllers/item.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/controllers/item.jshint.js");

;eval("define(\"app/tests/controllers/jobs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/jobs.js should pass jshint\', function() { \n      ok(true, \'controllers/jobs.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/controllers/jobs.jshint.js");

;eval("define(\"app/tests/controllers/jobs/feed-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/jobs\');\n    test(\'controllers/jobs/feed-item.js should pass jshint\', function() { \n      ok(true, \'controllers/jobs/feed-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/controllers/jobs/feed-item.jshint.js");

;eval("define(\"app/tests/controllers/jobs/feed.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/jobs\');\n    test(\'controllers/jobs/feed.js should pass jshint\', function() { \n      ok(true, \'controllers/jobs/feed.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/controllers/jobs/feed.jshint.js");

;eval("define(\"app/tests/helpers/highlight-object.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/highlight-object.js should pass jshint\', function() { \n      ok(true, \'helpers/highlight-object.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/helpers/highlight-object.jshint.js");

;eval("define(\"app/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'app\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=app/tests/helpers/resolver.js");

;eval("define(\"app/tests/helpers/start-app\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'app/app\')[\'default\'];\n    var Router = require(\'app/router\')[\'default\'];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=app/tests/helpers/start-app.js");

;eval("define(\"app/tests/helpers/time-tag.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/time-tag.js should pass jshint\', function() { \n      ok(true, \'helpers/time-tag.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/helpers/time-tag.jshint.js");

;eval("define(\"app/tests/initializers/clock.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/clock.js should pass jshint\', function() { \n      ok(true, \'initializers/clock.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/initializers/clock.jshint.js");

;eval("define(\"app/tests/models/definition.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/definition.js should pass jshint\', function() { \n      ok(true, \'models/definition.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/models/definition.jshint.js");

;eval("define(\"app/tests/models/job.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/job.js should pass jshint\', function() { \n      ok(true, \'models/job.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/models/job.jshint.js");

;eval("define(\"app/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/router.jshint.js");

;eval("define(\"app/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/routes/application.jshint.js");

;eval("define(\"app/tests/routes/jobs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/jobs.js should pass jshint\', function() { \n      ok(true, \'routes/jobs.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/routes/jobs.jshint.js");

;eval("define(\"app/tests/routes/jobs/feed.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/jobs\');\n    test(\'routes/jobs/feed.js should pass jshint\', function() { \n      ok(true, \'routes/jobs/feed.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/routes/jobs/feed.jshint.js");

;eval("define(\"app/tests/serializers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - serializers\');\n    test(\'serializers/application.js should pass jshint\', function() { \n      ok(true, \'serializers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/serializers/application.jshint.js");

;eval("define(\"app/tests/test-helper\", \n  [\"app/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=app/tests/test-helper.js");

;eval("define(\"app/tests/unit/components/nav-filter-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'nav-filter\', \'NavFilterComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=app/tests/unit/components/nav-filter-test.js");

;eval("define(\"app/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=app/tests/unit/routes/application-test.js");

;eval("define(\"app/tests/views/job.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/job.js should pass jshint\', function() { \n      ok(true, \'views/job.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/views/job.jshint.js");

;eval("define(\"app/tests/views/jobs/feed.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views/jobs\');\n    test(\'views/jobs/feed.js should pass jshint\', function() { \n      ok(true, \'views/jobs/feed.js should pass jshint.\'); \n    });\n  });//# sourceURL=app/tests/views/jobs/feed.jshint.js");

;eval("define(\"app/views/job\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var JobView = Ember.View.extend({\n\n      templateName: \'job\'\n\n    , classNames: [\'panel\', \'panel-default\']\n\n    , classNameBindings: [\n        \'controller.isFinished\'\n      , \'controller.isRunning\'\n      ]\n\n    , controllerBinding: \'content\'\n\n\n    });\n\n    __exports__[\"default\"] = JobView;\n  });//# sourceURL=app/views/job.js");

;eval("define(\"app/views/jobs/feed\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var JobsView = Ember.CollectionView.extend({\n\n      tagName: \'ul\'\n\n    , itemViewClass: \'job\'\n\n    , contentBinding: \'controller\'\n\n    });\n\n    __exports__[\"default\"] = JobsView;\n  });//# sourceURL=app/views/jobs/feed.js");
